AlphabetSoup

Overview of the analysis:
    The purpouse of this analysis is to predict where to make investments. Using neutral networks and machine learning will help provide feautures to the dataset and create a binary classifier. This will predict if applicants are going to be successfully funded by the Alphbet soup. 

Results:

What variable(s) are considered the target(s) for your model?
    If it is marked successful in the dataframe then this is predicting to be successful and funded by the alphabetsoup. 

what is considered to be the features for your model?
    The is_successful  is considered the features for the model.

What variable(s) are neither targets nor features, and should be removed from the input data?
    EIN and NAME column are neither targets nor features in the model. By removing these two, this will increase a chance of improvements for code efficiency.
    
Compiling, Training, and Evaluating the Model
How many neurons, layers, and activation functions did you select for your neural network model, and why?
# Define the model - deep neural net, i.e., the number of input features and hidden nodes for each layer.
number_input_features = len(X_train_scaled[0])
nn = tf.keras.models.Sequential()

# First hidden layer
nn.add(tf.keras.layers.Dense(units=80, activation="sigmoid", input_dim = number_input_features))

# Second hidden layer
nn.add(tf.keras.layers.Dense(units=20, activation="relu"))

# Output layer
nn.add(tf.keras.layers.Dense(units=1, activation="linear"))

# Check the structure of the model
nn.summary()

Were you able to achieve the target model performance?
    The target model performance was 75%.

What steps did you take to try and increase model performance?
    The steps I try to take to increase the model performance was increasing the number of layers and neurons.


Summary: Summarize the overall results of the deep learning model. Include a recommendation for how a different model could solve this classification problem, and explain your recommendation.
    Using a random forest classifier is something you can try as a recommendation to lessen the infuence of outliers. The accuracy of relu and sigmoid made the model increase the numbers in neurons and layers. 
    